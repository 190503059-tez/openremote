package org.openremote.test.rules;

import java.util.ArrayList;
import org.openremote.model.*;
import org.openremote.model.asset.*
import elemental.json.Json;

global java.util.logging.Logger LOG;
global org.openremote.model.rules.Assets assets;

/*
Calculate and set the "presenceDetected" flag and the "lastPresenceDetected" timestamp attributes
of a ROOM when a motion counter is incremented several times within a time window. The flag will be
removed if the motion counter has not been incremented within a time window. All time windows and
the number of matches required can be configured.
*/

rule "Set presence detected flag if motion counter is incremented in time window"
when
    // A room has a motion counter
    $room : AssetState(type == AssetType.ROOM, attributeName == "motionCount")
    // And the presence detected flag is not set already
    AssetState(id == $room.id, attributeName == "presenceDetected", !value.asBoolean)
    // And at least 5 motion counter increments have been received in the last 10 minutes
    accumulate(
        AssetEvent(id == $room.id, attributeName == "motionCount", value != null, value.asNumber > 0) over window:time(10m);
        $count: count(1);
        $count >= 5
    )
then
    // Set the presence detected flag of the room
    assets.dispatch(
            new AttributeEvent($room.getId(), "presenceDetected", Json.create(true))
    );
end

rule "Update the presence detected timestamp if motion counter is incremented and we have already detected presence"
when
    // A room has a motion counter
    $room : AssetState(type == AssetType.ROOM, attributeName == "motionCount")
    // And the presence detected flag is set
    AssetState(id == $room.id, attributeName == "presenceDetected", value.asBoolean)
    // And at least 5 motion counter increments have been received in the last 10 minutes
    accumulate(
        AssetEvent(id == $room.id, attributeName == "motionCount", value != null, value.asNumber > 0, $ts: valueTimestamp) over window:time(10m);
        $count: count(1),
        $latestIncrementTimestamp: max($ts);
        $count >= 5
    )
    // And the latest counter increment event is newer than the recorded last presence detected time
    AssetState(id == $room.id, attributeName == "lastPresenceDetected", value != null, $latestIncrementTimestamp > value.asNumber)
then
    // Update the last presence detected timestamp to the latest counter increment event
    assets.dispatch(
            new AttributeEvent($room.getId(), "lastPresenceDetected", Json.create($latestIncrementTimestamp))
    );
end


rule "Clear presence detected timestamp if motion counter was not incremented in a while"
when
    // A room has a motion counter
    $room: AssetState(type == AssetType.ROOM, attributeName == "motionCount")
    // And the presence detected flag is set
    AssetState(id == $room.id, attributeName == "presenceDetected", value.asBoolean)
    // And no motion counter increments have been received in the last 10 minutes
    accumulate(
        AssetEvent(id == $room.id, attributeName == "motionCount", value != null, value.asNumber > 0) over window:time(10m);
        $count: count(1);
        $count == 0
    )
then
    // Clear the presence detected flag of the room
    assets.dispatch(
            new AttributeEvent($room.getId(), "presenceDetected", Json.create(false))
    );
end
