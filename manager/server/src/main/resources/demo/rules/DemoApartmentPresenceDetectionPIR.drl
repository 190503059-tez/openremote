package org.openremote.test.rules;

import org.openremote.model.*;
import org.openremote.model.asset.*
import org.openremote.model.value.Values
import java.util.Date
import org.openremote.model.attribute.AttributeEvent;

global java.util.logging.Logger LOG;
global org.openremote.model.rules.Assets assets;

/*
Calculate and set the "presenceDetected" flag and the "lastPresenceDetected" timestamp attributes
of a ROOM when a motion sensor triggers several times within a time window. The flag will be
removed if the motion sensor has not been triggered within a time window. All time windows and
the number of matches required can be configured.
*/

declare initFact
    @role(event)
    init: Boolean
end

rule "Insert init fact at startup"
then
    insert(new initFact(true));
end

rule "Init firstPresenceDetected"
salience 10
when
    $init: initFact(init)
    $room : AssetState(type == AssetType.ROOM, attributeName == "motionSensor")
    AssetState(id==$room.id, attributeName == "firstPresenceDetected")
then
    retract($init);
//    assets.dispatch(
//            new AttributeEvent($room.getId(), "firstPresenceDetected", Values.create(-1))
//    );
end

rule "Fetch the first presence detected time stamp"
when
    // A room has a motion sensor
    $room : AssetState(type == AssetType.ROOM, attributeName == "motionSensor")
    // And the presence detected flag is not set already
    // TODO although rule "Init firstPresenceDetected" is triggered this does not work here when uncommented.
    // we need some kind on unset value marker, probably -1 does not work. In the old rules files it was string "-"
    //AssetState(id == $room.id, attributeName == "firstPresenceDetected", valueAsNumber==-1)
    AssetState(id == $room.id, attributeName == "firstPresenceDetected", value==null)
    // And the motion sensor is triggered
    $sensorState: AssetState(id == $room.id, attributeName == "motionSensor", valueAsBoolean == true)
then
    // Fetch the first presence detected timestamp of the room
    assets.dispatch(
            new AttributeEvent($room.getId(), "firstPresenceDetected", Values.create($sensorState.getValueTimestamp()))
    );
end

declare CO2Rising
	@role(event)
	@expires(15m)
    roomId: String
end

// TODO comparision does not work and this LHS generates:
//Unable to Analyse Expression valueAsNumber > oldValue:
//[Error: Comparison operation requires compatible types. Found class java.lang.Double and interface org.openremote.model.value.Value]
//[Near : {... valueAsNumber > oldValue ....}]
//                             ^ : [Rule name='Insert CO2 rising event']
//rule "Insert CO2 rising event"
//when
//    AssetState($roomId: id, type==AssetType.ROOM, attributeName == "co2Level", valueAsNumber > oldValue)
//then
//	insert(new CO2Rising($roomId));
//end

// TODO remove this rule if the rule above is working
rule "Insert CO2 rising event to be removed if the previous rule compiles"
when
    AssetState($roomId: id, type==AssetType.ROOM, attributeName == "co2Level", valueAsNumber != 350)
then
	insert(new CO2Rising($roomId));
end

rule "Set presence detected flag if motion sensor is triggered in time window"
when
    // A room has a motion sensor
    $room : AssetState(type == AssetType.ROOM, attributeName == "motionSensor")
    // And the presence detected flag is not set already
    AssetState(id == $room.id, attributeName == "presenceDetected", valueAsBoolean != true)
    // And at least 5 motion sensor triggers have been received in the last 10 minutes
    accumulate(
        AssetEvent(id == $room.id, attributeName == "motionSensor", valueAsBoolean == true) over window:time(10m);
        $count: count(1);
        $count >= 5
    )
    // Only when there is no CO2 sensor
    not AssetState(id == $room.id, attributeName == "co2Level")
then
    // Set the presence detected flag of the room
    assets.dispatch(
            new AttributeEvent($room.getId(), "presenceDetected", Values.create(true))
    );
end

rule "Set presence detected flag if CO2 rises in time window"
when
    // A room has a motion sensor
    $room : AssetState(type == AssetType.ROOM, attributeName == "co2Level")
    // And "firstPresenceDetected" is true
//    AssetState(id == $room.id, attributeName == "firstPresenceDetected", valueAsNumber > 0)
    // And the presence detected flag is not set already
    AssetState(id == $room.id, attributeName == "presenceDetected", valueAsBoolean != true)
    // And at least 5 CO2Rising have been received in the last 10 minutes
    accumulate(
        CO2Rising(roomId==$room.id) over window:time(10m);
        $count: count(1);
        $count >= 5
    )
then
    // Set the presence detected flag of the room
    assets.dispatch(
            new AttributeEvent($room.getId(), "presenceDetected", Values.create(true))
    );
end

rule "Update the presence detected timestamp if motion sensor is triggered and we have already detected presence"
when
    // The presence detected flag is set in a room
    $room: AssetState(type == AssetType.ROOM, attributeName == "presenceDetected", valueAsBoolean == true)
    // And the motion sensor is triggered
    $sensorState: AssetState(id == $room.id, attributeName == "motionSensor", valueAsBoolean == true)
then
    // Update the last presence detected timestamp of the room
    assets.dispatch(
            new AttributeEvent($room.getId(), "lastPresenceDetected", Values.create($sensorState.getValueTimestamp()))
    );
end

rule "Clear presence detected flag if motion sensor was not triggered in a while"
when
    // A room has a motion sensor
    $room: AssetState(type == AssetType.ROOM, attributeName == "motionSensor")
    // And the presence detected flag is set
    AssetState(id == $room.id, attributeName == "presenceDetected", valueAsBoolean == true)
    // And no motion sensor triggers have been received in the last 10 minutes
    accumulate(
        AssetEvent(id == $room.id, attributeName == "motionSensor", valueAsBoolean == true) over window:time(10m);
        $count: count(1);
        $count == 0
    )
then
    // Clear the presence detected flag of the room
    assets.dispatch(
            new AttributeEvent($room.getId(), "presenceDetected", Values.create(false))
    );
end
