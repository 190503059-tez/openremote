apply plugin: "java"
apply plugin: "application"
apply plugin: "distribution"

mainClassName = "org.openremote.manager.Main"

dependencies {

    compile resolveProject(":container")
    compile resolveProject(":agent")
    compile resolveProject(":model")

    compile "org.xerial:sqlite-jdbc:$sqliteVersion"

    compile "org.mnode.ical4j:ical4j:$ical4jVersion"

    compile "net.jafama:jafama:$jafamaVersion"
    compile "org.geotools:gt-main:$geotoolsVersion"
    compile "com.google.firebase:firebase-admin:$firebaseAdminVersion"
    compile "org.simplejavamail:simple-java-mail:$simpleJavaMailVersion"
}

// Load version properties file and use same version as source code
def props = new Properties()
file("src/main/resources/system.properties").withInputStream { props.load(it) }
version = props.get("version")

jar {
    archivesBaseName = "openremote-${project.name}"
}

distributions {
    main {
        contents {
            from(project.projectDir) {
                include("*Dockerfile")
            }
            // Populate the /deployment directory in the Manager image
            from("${resolveProject(":deployment").projectDir}") {
                into "deployment"
                exclude "**/build.gradle", "**/package.json", "**/openremote.log*", "**/yarn.lock"
            }
        }
    }
}

installDist {
    doLast {
        // Delete the useless start scripts, they have a hardcoded classpath
        delete "${buildDir}/install/$distributions.main.baseName/bin"
    }
}