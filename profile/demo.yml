# Demo setup of OpenRemote v3
#
# This configuration works with https://www.docker.com/products/overview#/docker_toolbox
#
# Install Docker Toolbox and execute "docker-compose -p openremote -f profile/demo.yml up"
#
version: '2'
services:

  # This is the API gateway for the whole system and hosting the public resources
  # of the manager web application.
  manager:

    # Use installed or pull the latest image from Docker Hub.
    image: openremote/manager:latest

    # This application exposes a public web service that should be mapped to a host
    # port. The default is '8080', this is the port on your Docker host to access
    # the application. The second '8080' must match the service-internal port (see below).
    ports:
      - "8080:8080"

    # This service needs access to other services on the Docker network.
    links:
      - postgresql
      - keycloak

    environment:

      # It is important that all services have the same timezone and are time synchronized.
      # Bearer tokens are only valid for minutes, and authentication fails if Keycloak drifts.
      TZ: "Europe/Zurich"

      # If developer mode is enabled, all setup tasks will be executed on application startup.
      # This will clean all data in Keycloak and the Manager database, and then import demo/test
      # data. Some caching and other runtime performance-optimizations will also be disabled.
      DEV_MODE: 'false'

      # If you are not running in developer mode, and this is the first time you are starting
      # the application, you can configure which setup tasks you want to execute. Careful,
      # these tasks will clean and populate Keycloak and the Manager database with demo data!
      SETUP_CLEAN_INIT_KEYCLOAK: 'true'
      SETUP_KEYCLOAK_ADMIN_PASSWORD: secret
      SETUP_CLEAN_INIT_MANAGER: 'true'
      SETUP_IMPORT_DEMO_DATA: 'true'

      # The service-internal interface and port to listen on. This should not be changed.
      WEBSERVER_LISTEN_HOST: 0.0.0.0
      WEBSERVER_LISTEN_PORT: 8080

      # The public host name of this OpenRemote installation. This name is used in bearer tokens
      # and must be the name you access the web services under. If you are using Docker Toolbox,
      # this is the IP of a virtual machine running the Linux Docker host (see VirtualBox).
      IDENTITY_NETWORK_HOST: '192.168.99.100'

      # The public port of this OpenRemote installation. For simple installations without an
      # HTTP proxy in front of this application, this will be the public webservice host-mapped
      # port.
      IDENTITY_NETWORK_WEBSERVER_PORT: 8080

      # The service-internal JDBC connection URL for the database service.
      DATABASE_CONNECTION_URL: jdbc:postgresql://postgresql/openremote

      # The database connection settings, passwords should be changed in production!
      DATABASE_USERNAME: openremote
      DATABASE_PASSWORD: CHANGE_ME_DB_USER_PASSWORD
      DATABASE_MIN_POOL_SIZE: 5
      DATABASE_MAX_POOL_SIZE: 20
      DATABASE_CONNECTION_TIMEOUT_SECONDS: 300

      # The service-internal host name and port of the identity provider.
      KEYCLOAK_HOST: keycloak
      KEYCLOAK_PORT: 8080

    # Configure logging of the container, see config/logging.properties
    logging:
        options:
            max-size: "10m"

  # Keycloak identity provider
  keycloak:
    image: openremote/keycloak:latest
    links:
      - postgresql
    environment:
      TZ: "Europe/Zurich"

      KEYCLOAK_LOGLEVEL: INFO

      KEYCLOAK_USER: admin
      # Change the admin root password if you make this application publicly accessible! Note
      # that imported demo data uses the admin account and also creates a 'test' user with
      # password 'test'. Importing will be broken if you change the password only here.
      # Demo data should not be imported in production.
      KEYCLOAK_PASSWORD: secret

      # Configure how Keycloak connects to the database
      POSTGRES_DATABASE: openremote
      POSTGRES_USER: openremote
      POSTGRES_PASSWORD: CHANGE_ME_DB_USER_PASSWORD

  # PostgreSQL DBMS
  postgresql:
    image: openremote/postgresql:latest
    environment:
      TZ: "Europe/Zurich"
      # This is the DBMS superuser and password. You should change this, especially if you
      # expose the DBMS port and make it accessible externally!
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: CHANGE_ME_DB_SUPERUSER_PASSWORD

      # The database and service connection user, passwords should be changed in production!
      POSTGRES_DB: openremote
      OPENREMOTE_USERNAME: openremote
      OPENREMOTE_PASSWORD: CHANGE_ME_DB_USER_PASSWORD

    # Durable data requires a volume mapping on your Docker host
    # volumes:
    #  - /path/to/data/on/my/host/postgresql:/var/lib/postgresql/data
