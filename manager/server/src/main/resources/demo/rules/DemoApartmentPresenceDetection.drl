package org.openremote.test.rules;

import org.openremote.model.*;
import org.openremote.model.asset.*
import elemental.json.Json;

global java.util.logging.Logger LOG;
global org.openremote.model.rules.Assets assets;

/*

Calculate and set the "presenceDetected" timestamp attribute of a ROOM when either motion sensor
is triggered several times within a defined time window, or a motion counter is incremented
several times within a time window. The timestamp will be cleared if no motion is sensed in
a defined time window or a motion counter has not been incremented within a time window.
All time windows and the number of matches required can be configured.

*/

/* ####################################### MOTION SENSOR ###################################### */

rule "Set presence detected timestamp if motion sensor is triggered in time window"
when
    // The motion sensor in a room is triggered
    $roomEvent : AssetEvent(type == AssetType.ROOM, attributeName == "motionSensor", value.asBoolean)
    // More than 2 times in the last 15 minutes
    Number(intValue > 2) from accumulate(
        $roomEvent2 : AssetEvent(id == $roomEvent.id, attributeName == "motionSensor", value.asBoolean) over window:time(15m),
        count($roomEvent2)
    )
    // And the presence detected timestamp is not set already
    AssetState(id == $roomEvent.getId(), attributeName == "presenceDetected", valueNull)
then
    // Set the presence detected timestamp of the room
    long currentTime = drools.getWorkingMemory().getSessionClock().getCurrentTime();
    assets.dispatch(
            new AttributeEvent($roomEvent.getId(), "presenceDetected", Json .create(currentTime))
    );
end

rule "Clear presence detected timestamp if motion sensor was not triggered in a while"
when
    // The motion sensor in a room as not been triggered in the last 15 minutes
    $roomEvent : AssetEvent(type == AssetType.ROOM, attributeName == "motionSensor", value.asBoolean)
    not(AssetEvent(id == $roomEvent.id, attributeName == "motionSensor", value.asBoolean, this != $roomEvent, this after[0s,15m] $roomEvent ))
    // And the presence detected timestamp is set
    AssetState(id == $roomEvent.getId(), attributeName == "presenceDetected", !valueNull)
then
    // Clear the presence detected timestamp of the room
    assets.dispatch(
            new AttributeEvent($roomEvent.getId(), "presenceDetected", Json .createNull())
    );
end

/* ####################################### MOTION COUNTER ###################################### */

rule "Set presence detected timestamp if motion counter is incremented in time window"
when
    // The motion counter in a room is incremented more than 2 times in the last 15 minutes
    $roomEvent : AssetEvent(type == AssetType.ROOM, attributeName == "motionCounter", $orgMC: value.asNumber > 0)
    accumulate(
        AssetEvent(id == $roomEvent.id, attributeName == "motionCounter", $newMC: value.asNumber > 0) over window:time(15m);
        $count: count(1),
        $maxMC: max($newMC);
        $maxMC > $orgMC, $count > 2
    )
    // And the presence detected timestamp is not set already
    AssetState(id == $roomEvent.getId(), attributeName == "presenceDetected", valueNull)
then
    // Set the presence detected timestamp of the room
    long currentTime = drools.getWorkingMemory().getSessionClock().getCurrentTime();
    assets.dispatch(
            new AttributeEvent($roomEvent.getId(), "presenceDetected", Json .create(currentTime))
    );
end

rule "Clear presence detected timestamp if motion counter was not incremented in a while"
when
    // The motion counter in a room as not been incremented in the last 15 minutes
    $roomEvent : AssetEvent(type == AssetType.ROOM, attributeName == "motionCounter", $orgMC: value.asNumber() > 0)
    not(AssetEvent(id == $roomEvent.id, attributeName == "motionCounter", value.asNumber > $orgMC, this != $roomEvent, this after[0s,15m] $roomEvent ))
    // And the presence detected timestamp is set
    AssetState(id == $roomEvent.getId(), attributeName == "presenceDetected", !valueNull)
then
    // Clear the presence detected timestamp of the room
    assets.dispatch(
            new AttributeEvent($roomEvent.getId(), "presenceDetected", Json .createNull())
    );
end
