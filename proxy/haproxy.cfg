#
# Serve ACME certificate validation challenges and act as an
# SSL reverse-proxy for host "manager:8080"
#
global
    log 127.0.0.1:514 local0 "${PROXY_LOGLEVEL}"

    # Used for serving certificate validation challenges
    chroot /deployment/acme-webroot
    lua-load /etc/haproxy/acme-http01-webroot.lua

    # Default SSL material locations, managed by certbot
    crt-base /deployment/letsencrypt/live

    maxconn 1024
    ssl-default-bind-ciphers AES256+EECDH:AES256+EDH:!aNULL;
    tune.ssl.default-dh-param 4096

defaults
    log global
    mode http
    # Enable to see detailed logs
    # option httplog
    timeout connect 30s
    timeout client 60s
    timeout server 60s
    timeout tunnel 720m

frontend http
    bind *:80

    # Serve certificate validation challenges directly with Lua plugin
    acl url_acme_http01 path_beg /.well-known/acme-challenge/
    http-request use-service lua.acme-http01 if METH_GET url_acme_http01
    redirect scheme https if !url_acme_http01

frontend https

    # Demo certificate is self-signed
    # Production certificate, should be created/stored/managed by letsencrypt sidecar container
    bind :443 ssl no-tls-tickets crt "${CERT_FILE}" no-sslv3 no-tls-tickets no-tlsv10 no-tlsv11

    reqadd X-Forwarded-Proto:\ https
    rspadd Strict-Transport-Security:\ max-age=15768000

    use_backend custom_backend

backend custom_backend
    server node1 "${PROXY_BACKEND_HOST}":"${PROXY_BACKEND_PORT}"
